--altmult_add ADDNSUB_MULTIPLIER_ACLR1="ACLR0" ADDNSUB_MULTIPLIER_PIPELINE_ACLR1="ACLR0" ADDNSUB_MULTIPLIER_PIPELINE_REGISTER1="CLOCK0" ADDNSUB_MULTIPLIER_REGISTER1="CLOCK0" CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEDICATED_MULTIPLIER_CIRCUITRY="AUTO" DEVICE_FAMILY="Cyclone II" DSP_BLOCK_BALANCING="Auto" INPUT_ACLR_A0="ACLR0" INPUT_ACLR_A1="ACLR0" INPUT_ACLR_A2="ACLR0" INPUT_ACLR_B0="ACLR0" INPUT_ACLR_B1="ACLR0" INPUT_ACLR_B2="ACLR0" INPUT_REGISTER_A0="CLOCK0" INPUT_REGISTER_A1="CLOCK0" INPUT_REGISTER_A2="CLOCK0" INPUT_REGISTER_B0="CLOCK0" INPUT_REGISTER_B1="CLOCK0" INPUT_REGISTER_B2="CLOCK0" INPUT_SOURCE_A0="DATAA" INPUT_SOURCE_A1="DATAA" INPUT_SOURCE_A2="DATAA" INPUT_SOURCE_B0="DATAB" INPUT_SOURCE_B1="DATAB" INPUT_SOURCE_B2="DATAB" MULTIPLIER1_DIRECTION="ADD" MULTIPLIER_ACLR0="ACLR0" MULTIPLIER_ACLR1="ACLR0" MULTIPLIER_ACLR2="ACLR0" MULTIPLIER_REGISTER0="CLOCK0" MULTIPLIER_REGISTER1="CLOCK0" MULTIPLIER_REGISTER2="CLOCK0" NUMBER_OF_MULTIPLIERS=3 OUTPUT_ACLR="ACLR0" OUTPUT_REGISTER="CLOCK0" port_addnsub1="PORT_UNUSED" port_signa="PORT_UNUSED" port_signb="PORT_UNUSED" REPRESENTATION_A="SIGNED" REPRESENTATION_B="SIGNED" SIGNED_ACLR_A="ACLR0" SIGNED_ACLR_B="ACLR0" SIGNED_PIPELINE_ACLR_A="ACLR0" SIGNED_PIPELINE_ACLR_B="ACLR0" SIGNED_PIPELINE_REGISTER_A="CLOCK0" SIGNED_PIPELINE_REGISTER_B="CLOCK0" SIGNED_REGISTER_A="CLOCK0" SIGNED_REGISTER_B="CLOCK0" WIDTH_A=14 WIDTH_B=3 WIDTH_RESULT=19 aclr0 clock0 dataa datab result CARRY_CHAIN="MANUAL" CARRY_CHAIN_LENGTH=48
--VERSION_BEGIN 13.0 cbx_alt_ded_mult_y 2013:06:12:18:03:43:SJ cbx_altera_mult_add 2013:06:12:18:03:43:SJ cbx_altera_mult_add_rtl 2013:06:12:18:03:43:SJ cbx_altmult_add 2013:06:12:18:03:43:SJ cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_mult 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_padd 2013:06:12:18:03:43:SJ cbx_parallel_add 2013:06:12:18:03:43:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ cbx_util_mgl 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION ded_mult_d491 (aclr[3..0], clock[3..0], dataa[13..0], datab[2..0], ena[3..0])
RETURNS ( result[16..0]);
FUNCTION soft (in)
RETURNS ( out);

--synthesis_resources = dsp_9bit 6 lut 37 reg 19 
OPTIONS ALTERA_INTERNAL_OPTION = "{-to dffe8a} MAX_FANOUT=5";

SUBDESIGN mult_add_q774
( 
	aclr0	:	input;
	clock0	:	input;
	dataa[41..0]	:	input;
	datab[8..0]	:	input;
	result[18..0]	:	output;
) 
VARIABLE
	add4_result[17..0]	:	WIRE;
	add6_result[18..0]	:	WIRE;
	ded_mult1 : ded_mult_d491;
	ded_mult2 : ded_mult_d491;
	ded_mult3 : ded_mult_d491;
	dffe8a[18..0] : dffe;
	sft5a[17..0] : soft;
	sft7a[18..0] : soft;
	dataa_bus[41..0]	: WIRE;
	datab_bus[8..0]	: WIRE;
	ena0	: NODE;
	w_input147w[17..0]	: WIRE;
	w_input153w[17..0]	: WIRE;
	w_input158w[18..0]	: WIRE;
	w_input164w[18..0]	: WIRE;

BEGIN 
	add4_result[] = w_input147w[] + w_input153w[];
	add6_result[] = w_input158w[] + w_input164w[];
	ded_mult1.aclr[] = ( B"000", aclr0);
	ded_mult1.clock[] = ( B"111", clock0);
	ded_mult1.dataa[] = ( dataa_bus[13..0]);
	ded_mult1.datab[] = ( datab_bus[2..0]);
	ded_mult1.ena[] = ( B"111", ena0);
	ded_mult2.aclr[] = ( B"000", aclr0);
	ded_mult2.clock[] = ( B"111", clock0);
	ded_mult2.dataa[] = ( dataa_bus[27..14]);
	ded_mult2.datab[] = ( datab_bus[5..3]);
	ded_mult2.ena[] = ( B"111", ena0);
	ded_mult3.aclr[] = ( B"000", aclr0);
	ded_mult3.clock[] = ( B"111", clock0);
	ded_mult3.dataa[] = ( dataa_bus[41..28]);
	ded_mult3.datab[] = ( datab_bus[8..6]);
	ded_mult3.ena[] = ( B"111", ena0);
	dffe8a[].clk = clock0;
	dffe8a[].clrn = (! aclr0);
	dffe8a[].d = sft7a[].out;
	dffe8a[].ena = ena0;
	sft5a[].in = add4_result[];
	sft7a[].in = add6_result[];
	dataa_bus[] = ( dataa[41..0]);
	datab_bus[] = ( datab[8..0]);
	ena0 = VCC;
	result[18..0] = dffe8a[18..0].q;
	w_input147w[] = ( ded_mult1.result[16..16], ded_mult1.result[16..0]);
	w_input153w[] = ( ded_mult2.result[16..16], ded_mult2.result[16..0]);
	w_input158w[] = ( add4_result[17..17], add4_result[]);
	w_input164w[] = ( ded_mult3.result[16..16], ded_mult3.result[16..16], ded_mult3.result[16..0]);
END;
--VALID FILE
